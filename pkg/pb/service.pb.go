// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.7
// source: github.com/alavrovinfb/fls-interpreter/pkg/pb/service.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: Structure your own protobuf messages. Each protocol buffer message is a
// small logical record of information, containing a series of name-value pairs.
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script *structpb.Struct `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *ScriptRequest) Reset() {
	*x = ScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptRequest) ProtoMessage() {}

func (x *ScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptRequest.ProtoReflect.Descriptor instead.
func (*ScriptRequest) Descriptor() ([]byte, []int) {
	return file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescGZIP(), []int{1}
}

func (x *ScriptRequest) GetScript() *structpb.Struct {
	if x != nil {
		return x.Script
	}
	return nil
}

type ScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FLS script execution results
	Result []*structpb.Value `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ScriptResponse) Reset() {
	*x = ScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptResponse) ProtoMessage() {}

func (x *ScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptResponse.ProtoReflect.Descriptor instead.
func (*ScriptResponse) Descriptor() ([]byte, []int) {
	return file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescGZIP(), []int{2}
}

func (x *ScriptResponse) GetResult() []*structpb.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescGZIP(), []int{3}
}

func (x *ResetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResetResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto protoreflect.FileDescriptor

var file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x61,
	0x76, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x66, 0x62, 0x2f, 0x66, 0x6c, 0x73, 0x2d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66,
	0x6c, 0x73, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x95, 0x09, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3a, 0xd2, 0x08, 0x92, 0x41, 0xce, 0x08, 0x0a, 0x41, 0x2a,
	0x12, 0x46, 0x4c, 0x53, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x32, 0x2b, 0x46, 0x4c, 0x53, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x69,
	0x73, 0x20, 0x61, 0x20, 0x4a, 0x53, 0x4f, 0x4e, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20,
	0x32, 0x88, 0x08, 0x7b, 0x0a, 0x20, 0x20, 0x22, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x3a,
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x72, 0x31, 0x22, 0x3a, 0x20, 0x31,
	0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x72, 0x32, 0x22, 0x3a, 0x20, 0x32, 0x2c,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x72, 0x35, 0x22, 0x3a, 0x20, 0x35, 0x2c, 0x0a,
	0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x3a, 0x20, 0x5b, 0x0a, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63,
	0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x73, 0x65, 0x74, 0x75, 0x70, 0x22, 0x0a, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x2c, 0x0a, 0x20, 0x20, 0x20,
	0x20, 0x22, 0x73, 0x65, 0x74, 0x75, 0x70, 0x22, 0x3a, 0x20, 0x5b, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64,
	0x22, 0x3a, 0x20, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x61, 0x72, 0x31,
	0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3a, 0x20, 0x33, 0x2e, 0x35, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x2c,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x20, 0x22, 0x23, 0x76, 0x61, 0x72, 0x31, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x73, 0x75, 0x6d, 0x22,
	0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20,
	0x22, 0x76, 0x61, 0x72, 0x31, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x76, 0x61, 0x72, 0x31,
	0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x32, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x76, 0x61, 0x72, 0x32, 0x22, 0x0a, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x76, 0x61, 0x72, 0x31, 0x22, 0x0a, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x61, 0x72, 0x33, 0x22, 0x2c, 0x0a, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x20,
	0x35, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22,
	0x3a, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x61, 0x72, 0x31, 0x22,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a,
	0x20, 0x22, 0x23, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0x0a, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x22, 0x73, 0x75, 0x6d, 0x22, 0x3a, 0x20, 0x5b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a, 0x20,
	0x22, 0x61, 0x64, 0x64, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22,
	0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x24, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x22, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x31, 0x22, 0x3a, 0x20,
	0x22, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x22, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x32, 0x22, 0x3a, 0x20, 0x22,
	0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d,
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0x3a, 0x20, 0x5b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64, 0x22, 0x3a,
	0x20, 0x22, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x76, 0x61, 0x72,
	0x31, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6d, 0x64,
	0x22, 0x3a, 0x20, 0x22, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x23, 0x76,
	0x61, 0x72, 0x32, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x2c, 0x0a, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63,
	0x6d, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x20, 0x22,
	0x23, 0x76, 0x61, 0x72, 0x33, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20,
	0x20, 0x20, 0x20, 0x5d, 0x0a, 0x20, 0x20, 0x7d, 0x0a, 0x7d, 0x0a, 0x22, 0x40, 0x0a, 0x0e, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x32, 0x9e, 0x02, 0x0a, 0x0e, 0x46, 0x6c, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x66, 0x6c, 0x73, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x0d,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x66, 0x6c, 0x73, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66,
	0x6c, 0x73, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x3a, 0x01,
	0x2a, 0x12, 0x4e, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x66, 0x6c, 0x73, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x42, 0xaa, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6c, 0x61, 0x76, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x66, 0x62, 0x2f, 0x66, 0x6c, 0x73,
	0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x92, 0x41, 0x75, 0x12, 0x69, 0x0a, 0x17, 0x46, 0x4c, 0x53,
	0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x20, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x46, 0x4c, 0x53, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x65, 0x74, 0x65, 0x72, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x20, 0x46, 0x4c, 0x53, 0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x32, 0x06, 0x76, 0x30,
	0x2e, 0x31, 0x2e, 0x30, 0x22, 0x04, 0x2f, 0x76, 0x31, 0x2f, 0x2a, 0x02, 0x01, 0x02, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescOnce sync.Once
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescData = file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDesc
)

func file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescGZIP() []byte {
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescOnce.Do(func() {
		file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescData)
	})
	return file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDescData
}

var file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_goTypes = []interface{}{
	(*VersionResponse)(nil), // 0: flsinterpreter.VersionResponse
	(*ScriptRequest)(nil),   // 1: flsinterpreter.ScriptRequest
	(*ScriptResponse)(nil),  // 2: flsinterpreter.ScriptResponse
	(*ResetResponse)(nil),   // 3: flsinterpreter.ResetResponse
	(*structpb.Struct)(nil), // 4: google.protobuf.Struct
	(*structpb.Value)(nil),  // 5: google.protobuf.Value
	(*emptypb.Empty)(nil),   // 6: google.protobuf.Empty
}
var file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_depIdxs = []int32{
	4, // 0: flsinterpreter.ScriptRequest.script:type_name -> google.protobuf.Struct
	5, // 1: flsinterpreter.ScriptResponse.result:type_name -> google.protobuf.Value
	6, // 2: flsinterpreter.FlsInterpreter.GetVersion:input_type -> google.protobuf.Empty
	1, // 3: flsinterpreter.FlsInterpreter.ScriptExecute:input_type -> flsinterpreter.ScriptRequest
	6, // 4: flsinterpreter.FlsInterpreter.Reset:input_type -> google.protobuf.Empty
	0, // 5: flsinterpreter.FlsInterpreter.GetVersion:output_type -> flsinterpreter.VersionResponse
	2, // 6: flsinterpreter.FlsInterpreter.ScriptExecute:output_type -> flsinterpreter.ScriptResponse
	3, // 7: flsinterpreter.FlsInterpreter.Reset:output_type -> flsinterpreter.ResetResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_init() }
func file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_init() {
	if File_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_goTypes,
		DependencyIndexes: file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_depIdxs,
		MessageInfos:      file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_msgTypes,
	}.Build()
	File_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto = out.File
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_rawDesc = nil
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_goTypes = nil
	file_github_com_alavrovinfb_fls_interpreter_pkg_pb_service_proto_depIdxs = nil
}
